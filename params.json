{"name":"Cf","tagline":"cf -- A command line client to Rackspace Cloud Files","body":"## cf    \r\n#####A Command-Line Interface to Rackspace Cloud Files\r\n\r\nIt's not beautiful, or amazing, or even spectacular.  But it will will let you upload stuff to Cloud Files hosted in Rackspace.  Simple commands like `cf list all` or `cf put somecontainer file1 file2` don't suck too bad, right?  So far, you can:\r\n\r\n* List containers\r\n* List objects in containers\r\n* Create and delete containers\r\n* Delete, upload, and download objects\r\n\r\nIn the future, I hope it'll also:\r\n\r\n* Delete containers w/ objects (override default safeties)\r\n* Make containers public and get URLs\r\n* Shorten CDN URLs for public files\r\n* Enable CDN logging\r\n* Modify CDN TTL vals\r\n\r\n\r\n## Installation\r\n\r\n### With pip or easy_install:\r\n\r\n`$ sudo pip install cf`   \r\n**OR**    \r\n`$ sudo easy_install cf`\r\n\r\n### With git:\r\n\r\n    $ git clone https://github.com/angstwad/cf.git\r\n    $ cd cf/\r\n    $ sudo python ./setup.py install\r\n\r\n### Requires\r\n#### python-cloudfiles\r\n\r\nThe setup.py script will attempt to download and install the *python-cloudfiles* module for you, but if it doesn't, then you'll have to manually install it:\r\n  \r\n`$ sudo pip install python-cloudfiles`    \r\n**OR**    \r\n`$ sudo easy_install python-cloudfiles`\r\n\r\n## Usage\r\n\r\nCredentials (username and API key) are supplied three ways:\r\n\r\n* Arguments: `$ cf --username <u> --apikey <u>`\r\n* Environment variables: **CF_USER** and **CF_APIKEY**\r\n* Config file at `$HOME/.cf`, created by running `$ cf config --create-config`\r\n\r\nCredentials supplied as arguments override a config file or enviroment variables -- in fact, they're prioritized in the order above.  Arguments > envvars > config file.\r\n\r\n##### Test your credentials:\r\n    $ cf config --test-login\r\n    >>> Successfully authenticated to Rackspace Cloud Files.\r\n##### List all containers\r\n`$ cf list all`\r\n##### List all items in mycontainer:\r\n`$ cf list mycontainer`\r\n##### Create container: \r\n`$ cf cont --create someContainer`\r\n##### Delete container:\r\n`$ cf cont [ --delete | -D ] someContainer`\r\n##### Upload some files:\r\n`$ cf put new_container file1 file2`\r\n##### Upload whole dirs:\r\n`$ cf put someContainer ~/Documents/*`\r\n##### Download some files:\r\n`$ cf get that_old_container pic1.jpg file2.html`    \r\n##### Or put it someplace special with the `-d` flag!    \r\n`$ cf get that_old_container pic1.jpg file2.html -d /home/user`\r\n##### Delete remote objects\r\n`$ cf obj someContainer file1 file2`\r\n\r\n## Info\r\n\r\n* **It does now check for overwrites!**\r\n* Haven't tested on Windows.  I don't even have a clue if it'll work for you.\r\n\r\n## License\r\n\r\nReleased under the Apache 2.0 license.\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}